// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "AHCommonDataService.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



AHCommon::AHCommonDataService_ptr AHCommon::AHCommonDataService_Helper::_nil() {
  return ::AHCommon::AHCommonDataService::_nil();
}

CORBA::Boolean AHCommon::AHCommonDataService_Helper::is_nil(::AHCommon::AHCommonDataService_ptr p) {
  return CORBA::is_nil(p);

}

void AHCommon::AHCommonDataService_Helper::release(::AHCommon::AHCommonDataService_ptr p) {
  CORBA::release(p);
}

void AHCommon::AHCommonDataService_Helper::marshalObjRef(::AHCommon::AHCommonDataService_ptr obj, cdrStream& s) {
  ::AHCommon::AHCommonDataService::_marshalObjRef(obj, s);
}

AHCommon::AHCommonDataService_ptr AHCommon::AHCommonDataService_Helper::unmarshalObjRef(cdrStream& s) {
  return ::AHCommon::AHCommonDataService::_unmarshalObjRef(s);
}

void AHCommon::AHCommonDataService_Helper::duplicate(::AHCommon::AHCommonDataService_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

AHCommon::AHCommonDataService_ptr
AHCommon::AHCommonDataService::_duplicate(::AHCommon::AHCommonDataService_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

AHCommon::AHCommonDataService_ptr
AHCommon::AHCommonDataService::_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


AHCommon::AHCommonDataService_ptr
AHCommon::AHCommonDataService::_unchecked_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

AHCommon::AHCommonDataService_ptr
AHCommon::AHCommonDataService::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_AHCommonDataService _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_AHCommonDataService* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_AHCommonDataService;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* AHCommon::AHCommonDataService::_PD_repoId = "IDL:AHCommon/AHCommonDataService:1.0";


AHCommon::_objref_AHCommonDataService::~_objref_AHCommonDataService() {
  
}


AHCommon::_objref_AHCommonDataService::_objref_AHCommonDataService(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::AHCommon::AHCommonDataService::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
AHCommon::_objref_AHCommonDataService::_ptrToObjRef(const char* id)
{
  if( id == ::AHCommon::AHCommonDataService::_PD_repoId )
    return (::AHCommon::AHCommonDataService_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::AHCommon::AHCommonDataService::_PD_repoId) )
    return (::AHCommon::AHCommonDataService_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cstring_o_cstring
class _0RL_cd_e8120ef1fd65137b_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_e8120ef1fd65137b_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBA::String_var arg_0_;
  const char* arg_0;
  CORBA::String_var arg_1;
  CORBA::Boolean result;
};

void _0RL_cd_e8120ef1fd65137b_00000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_e8120ef1fd65137b_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_e8120ef1fd65137b_00000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  _n.marshalString(arg_1,0);

}

void _0RL_cd_e8120ef1fd65137b_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  arg_1 = _n.unmarshalString(0);

}

// Local call call-back function.
static void
_0RL_lcfn_e8120ef1fd65137b_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_e8120ef1fd65137b_00000000* tcd = (_0RL_cd_e8120ef1fd65137b_00000000*)cd;
  AHCommon::_impl_AHCommonDataService* impl = (AHCommon::_impl_AHCommonDataService*) svnt->_ptrToInterface(AHCommon::AHCommonDataService::_PD_repoId);
  tcd->result = impl->getData(tcd->arg_0, tcd->arg_1.out());


}

CORBA::Boolean AHCommon::_objref_AHCommonDataService::getData(const char* dataname, CORBA::String_out data)
{
  _0RL_cd_e8120ef1fd65137b_00000000 _call_desc(_0RL_lcfn_e8120ef1fd65137b_10000000, "getData", 8);
  _call_desc.arg_0 = dataname;

  _invoke(_call_desc);
  data = _call_desc.arg_1._retn();
  return _call_desc.result;


}
AHCommon::_pof_AHCommonDataService::~_pof_AHCommonDataService() {}


omniObjRef*
AHCommon::_pof_AHCommonDataService::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::AHCommon::_objref_AHCommonDataService(ior, id);
}


CORBA::Boolean
AHCommon::_pof_AHCommonDataService::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::AHCommon::AHCommonDataService::_PD_repoId) )
    return 1;
  
  return 0;
}

const AHCommon::_pof_AHCommonDataService _the_pof_AHCommon_mAHCommonDataService;

AHCommon::_impl_AHCommonDataService::~_impl_AHCommonDataService() {}


CORBA::Boolean
AHCommon::_impl_AHCommonDataService::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "getData") ) {

    _0RL_cd_e8120ef1fd65137b_00000000 _call_desc(_0RL_lcfn_e8120ef1fd65137b_10000000, "getData", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
AHCommon::_impl_AHCommonDataService::_ptrToInterface(const char* id)
{
  if( id == ::AHCommon::AHCommonDataService::_PD_repoId )
    return (::AHCommon::_impl_AHCommonDataService*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::AHCommon::AHCommonDataService::_PD_repoId) )
    return (::AHCommon::_impl_AHCommonDataService*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
AHCommon::_impl_AHCommonDataService::_mostDerivedRepoId()
{
  return ::AHCommon::AHCommonDataService::_PD_repoId;
}

POA_AHCommon::AHCommonDataService::~AHCommonDataService() {}

